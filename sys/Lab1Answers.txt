
1) What are the advantages and disadvantages of each of the two scheduling policies? Also, give the advantages and disadvantages of the round robin scheduling policy originally implemented in Xinu.

EXPSCHED:

	Advantages:
		
		1) Processes are chosen at regular intervals based on the random variable generated by the exponential distribution function. This avoids the problem of starvation of low priority processes i.e., low priority processes no longer need to wait for higher priority process to be executed completely.
		2) New processes created during execution and the currently running process are also a part of the next lottery and so new processes need not wait unlike LINUXSCHED, where new process has to wait till all the processes finish their quantum.


	Disadvantages:

		1) Both higher and lower priority processes are allocated the same CPU time at every  schedule and also the scheduling is based on a random value generated by exponential distribution. This might lead to lower efficiency of higher priority process.
		2) Does not differentiate between real-time and normal processes.

LINUXSCHED:

	Advantages:
		
		1) Processes with high priorities are preferred to execute first and they run for a longer time. 
		2) But processes with lower priority are also chosen to be executed within an epoch. This avoids the problem of starvation of low priority processes i.e., low priority processes no longer need to wait for higher priority process to be executed completely.
		3) If a process uses its allocated CPU time (quantum) partially, it will be considered by giving more time and higher preference in the next epoch.

	Disadvantages:

		1) For new processes that are created during an epoch, they will have to wait till all processes pertaining to that epoch finish their quantum before they could be scheduled for the next epoch. This means that new processes having high priorities might have to wait for low priority processes in the current epoch to complete their quantum.
		2) Does not differentiate between real-time and normal processes.

XINUSCHED:

	Advantages:

		1) Since this is a priority based scheduling, higher priority processes execute first. 		2) Since time quantum is 10 CPU ticks only, if a new process with higher priority is created, it will be scheduled to execute earlier than in LINUXSCHED, where new process has to wait till all the processes finish their quantum in the current epoch.

	Disadvantages:

		1) Low priority process has to wait for all higher priority processes to be executed. In worst cases, they may not even execute leading to starvation.
		2) Does not differentiate Real-time and normal processes.

2) Describe the way each of the schedulers affects the NULL process.
	*Null process is a process that is used to ensure that a process is always there to catch interrupts. 

EXPSCHED:
	In this scheduling, if no processes are ready to be run (ie. if newProcPid=0 after searching all the processes in PCURR or PRREADY states), Null process is chosen to be run for a predefined quantum. If no new process interrupts the execution of the null process, the null process runs at the background, else rescheduling takes place.

LINUXSCHED:
	In this scheduling, if maxGoodness==0 for every existing processes then Null process is chosen to be run for a predetermined quantum. If no new process interrupts the execution of the null process, the null process runs at the background, else rescheduling takes place.

XINUSCHED:
	In this scheduling, if no processes are ready to be run in the ready queue as well as the current process is not in a state to execute, Null process is chosen to be run for a predefined quantum. If no new process interrupts the execution of the null process, the null process runs at the background, else rescheduling takes place.

	

